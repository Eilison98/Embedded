
TimerCount.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000019c  00000210  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000019c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000250  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008d2  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000811  00000000  00000000  00000b82  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ae  00000000  00000000  00001393  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001644  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041b  00000000  00000000  00001668  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000001f  00000000  00000000  00001a83  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001aa2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e9       	ldi	r30, 0x9C	; 156
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d0       	rcall	.+4      	; 0xb8 <main>
  b4:	71 c0       	rjmp	.+226    	; 0x198 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <main>:
	
int main(void)
{
	unsigned char piano=0;
	
	DDRB = 0x80; // PWM 출력, OCR1C
  b8:	80 e8       	ldi	r24, 0x80	; 128
  ba:	87 bb       	out	0x17, r24	; 23
	
	//TCCR1A |= 0x0A; // 0B 0000 1010 COM1C(1:0)=“10”, OC1C핀사용, WGM3(1:0)=“10”
	TCCR1A = ((1<<COM1C1) | (1<<WGM11));
  bc:	8a e0       	ldi	r24, 0x0A	; 10
  be:	8f bd       	out	0x2f, r24	; 47
	//TCCR1B |= 0x19; // OB 0001 1001 WGM3(3:2)=“11”, CS3(2:0)=“001” 1분주 사용
	TCCR1B = ((1<<WGM13) | (1<< WGM12) | (1<<CS10));
  c0:	89 e1       	ldi	r24, 0x19	; 25
  c2:	8e bd       	out	0x2e, r24	; 46
	TCCR1C = 0x00; // WGM3(3:0)=“1110”, Fast PWM, 모드 14
  c4:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	TCNT1 = 0x0000; // 타이머1 카운터 초기화
  c8:	1d bc       	out	0x2d, r1	; 45
  ca:	1c bc       	out	0x2c, r1	; 44
// 피아노 음계에 해당하는 PWM 주파수
unsigned int DoReMi[8] = {523, 587, 659, 698, 783,880, 987, 1046};
	
int main(void)
{
	unsigned char piano=0;
  cc:	c0 e0       	ldi	r28, 0x00	; 0
	TCCR1C = 0x00; // WGM3(3:0)=“1110”, Fast PWM, 모드 14
	TCNT1 = 0x0000; // 타이머1 카운터 초기화
	
	while(1)
	{
		ICR1 = 7372800/DoReMi[piano]; // 버튼에 맞는 음향을 연주
  ce:	ec 2f       	mov	r30, r28
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	ee 0f       	add	r30, r30
  d4:	ff 1f       	adc	r31, r31
  d6:	e0 50       	subi	r30, 0x00	; 0
  d8:	ff 4f       	sbci	r31, 0xFF	; 255
  da:	20 81       	ld	r18, Z
  dc:	31 81       	ldd	r19, Z+1	; 0x01
  de:	40 e0       	ldi	r20, 0x00	; 0
  e0:	50 e0       	ldi	r21, 0x00	; 0
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	70 e8       	ldi	r23, 0x80	; 128
  e6:	80 e7       	ldi	r24, 0x70	; 112
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	18 d0       	rcall	.+48     	; 0x11c <__divmodsi4>
  ec:	37 bd       	out	0x27, r19	; 39
  ee:	26 bd       	out	0x26, r18	; 38
		OCR1C = ICR1/2; // 50% 듀티비
  f0:	86 b5       	in	r24, 0x26	; 38
  f2:	97 b5       	in	r25, 0x27	; 39
  f4:	96 95       	lsr	r25
  f6:	87 95       	ror	r24
  f8:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  fc:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
		piano++; // piano 변수 1증가
 100:	cf 5f       	subi	r28, 0xFF	; 255
		if(8 < piano) piano = 0; // piano 가 9가 되면 초기화
 102:	c9 30       	cpi	r28, 0x09	; 9
 104:	08 f0       	brcs	.+2      	; 0x108 <main+0x50>
 106:	c0 e0       	ldi	r28, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 108:	2f ef       	ldi	r18, 0xFF	; 255
 10a:	8f e7       	ldi	r24, 0x7F	; 127
 10c:	96 e1       	ldi	r25, 0x16	; 22
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <main+0x56>
 116:	00 c0       	rjmp	.+0      	; 0x118 <main+0x60>
 118:	00 00       	nop
 11a:	d9 cf       	rjmp	.-78     	; 0xce <main+0x16>

0000011c <__divmodsi4>:
 11c:	05 2e       	mov	r0, r21
 11e:	97 fb       	bst	r25, 7
 120:	16 f4       	brtc	.+4      	; 0x126 <__divmodsi4+0xa>
 122:	00 94       	com	r0
 124:	0f d0       	rcall	.+30     	; 0x144 <__negsi2>
 126:	57 fd       	sbrc	r21, 7
 128:	05 d0       	rcall	.+10     	; 0x134 <__divmodsi4_neg2>
 12a:	14 d0       	rcall	.+40     	; 0x154 <__udivmodsi4>
 12c:	07 fc       	sbrc	r0, 7
 12e:	02 d0       	rcall	.+4      	; 0x134 <__divmodsi4_neg2>
 130:	46 f4       	brtc	.+16     	; 0x142 <__divmodsi4_exit>
 132:	08 c0       	rjmp	.+16     	; 0x144 <__negsi2>

00000134 <__divmodsi4_neg2>:
 134:	50 95       	com	r21
 136:	40 95       	com	r20
 138:	30 95       	com	r19
 13a:	21 95       	neg	r18
 13c:	3f 4f       	sbci	r19, 0xFF	; 255
 13e:	4f 4f       	sbci	r20, 0xFF	; 255
 140:	5f 4f       	sbci	r21, 0xFF	; 255

00000142 <__divmodsi4_exit>:
 142:	08 95       	ret

00000144 <__negsi2>:
 144:	90 95       	com	r25
 146:	80 95       	com	r24
 148:	70 95       	com	r23
 14a:	61 95       	neg	r22
 14c:	7f 4f       	sbci	r23, 0xFF	; 255
 14e:	8f 4f       	sbci	r24, 0xFF	; 255
 150:	9f 4f       	sbci	r25, 0xFF	; 255
 152:	08 95       	ret

00000154 <__udivmodsi4>:
 154:	a1 e2       	ldi	r26, 0x21	; 33
 156:	1a 2e       	mov	r1, r26
 158:	aa 1b       	sub	r26, r26
 15a:	bb 1b       	sub	r27, r27
 15c:	fd 01       	movw	r30, r26
 15e:	0d c0       	rjmp	.+26     	; 0x17a <__udivmodsi4_ep>

00000160 <__udivmodsi4_loop>:
 160:	aa 1f       	adc	r26, r26
 162:	bb 1f       	adc	r27, r27
 164:	ee 1f       	adc	r30, r30
 166:	ff 1f       	adc	r31, r31
 168:	a2 17       	cp	r26, r18
 16a:	b3 07       	cpc	r27, r19
 16c:	e4 07       	cpc	r30, r20
 16e:	f5 07       	cpc	r31, r21
 170:	20 f0       	brcs	.+8      	; 0x17a <__udivmodsi4_ep>
 172:	a2 1b       	sub	r26, r18
 174:	b3 0b       	sbc	r27, r19
 176:	e4 0b       	sbc	r30, r20
 178:	f5 0b       	sbc	r31, r21

0000017a <__udivmodsi4_ep>:
 17a:	66 1f       	adc	r22, r22
 17c:	77 1f       	adc	r23, r23
 17e:	88 1f       	adc	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	1a 94       	dec	r1
 184:	69 f7       	brne	.-38     	; 0x160 <__udivmodsi4_loop>
 186:	60 95       	com	r22
 188:	70 95       	com	r23
 18a:	80 95       	com	r24
 18c:	90 95       	com	r25
 18e:	9b 01       	movw	r18, r22
 190:	ac 01       	movw	r20, r24
 192:	bd 01       	movw	r22, r26
 194:	cf 01       	movw	r24, r30
 196:	08 95       	ret

00000198 <_exit>:
 198:	f8 94       	cli

0000019a <__stop_program>:
 19a:	ff cf       	rjmp	.-2      	; 0x19a <__stop_program>
